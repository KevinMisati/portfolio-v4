/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: ottobite (https://sketchfab.com/ottobite)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/stylized-hacked-pc-sketchfabweeklychallenge-192ab9d4706f4ffaaf22f9a299289d75
Title: Stylized Hacked PC #SketchfabWeeklyChallenge
*/

import React, { useRef , useState} from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

const Hackeroom = (props) =>  {
  const { nodes, materials } = useGLTF('models/glb.glb')

  const groupRef = useRef()

  const [increasing, setIncreasing] = useState(true) // Track rotation direction

  // Set rotation limits (in radians)
  const minRotation = -0.01  // -45 degrees
  const maxRotation =  0.01  // 45 degrees
  const rotationSpeed = 0.00005

  useFrame(() => {
    if (groupRef.current) {
      // Update rotation based on direction
      if (increasing) {
        groupRef.current.rotation.z += rotationSpeed
        if (groupRef.current.rotation.z >= maxRotation) {
          setIncreasing(false) // Reverse direction when reaching max
        }
      } else {
        groupRef.current.rotation.z -= rotationSpeed
        if (groupRef.current.rotation.z <= minRotation) {
          setIncreasing(true) // Reverse direction when reaching min
        }
      }
    }
})

  return (
    <group ref={groupRef} {...props} dispose={null}>
      <group name="Sketchfab_model" rotation={[-Math.PI / 1.75, -0.1, -1.35]} scale={21.276596}>
        <mesh
          name="Final_lambert1_0"
          castShadow
          receiveShadow
          geometry={nodes.Final_lambert1_0.geometry}
          material={materials.lambert1}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.01}
        />
      </group>
    </group>
  )
}

useGLTF.preload('models/glb.glb')
export default Hackeroom
